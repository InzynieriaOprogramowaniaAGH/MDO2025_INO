pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                sh '''
                #!/bin/bash
                docker system prune -f
                docker image prune -f
                docker container prune -f
                rm -rf ITE
                '''
                git branch: 'MK414948', url: 'https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git'
            }
        }
        stage('Build') {
            steps {
                dir('ITE/GCL04/MK414948/Sprawozdanie1/pliki/Dockerfiles'){
                    script{
                        docker.build('nodebuild','-f Dockerfile.nodebld .')
                    }
                }
               
            }
        }
        stage('Test') {
            steps {
                 dir('ITE/GCL04/MK414948/Sprawozdanie1/pliki/Dockerfiles'){
                     script{
                     docker.build('nodetest', '-f Dockerfile.nodetest .')
                     }
                 }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    //Tworzymy siec do przeprowadzenia testu łączności.
                    sh 'docker network create deploy || true'
                    //Uruchamiamy petenta
                    def TDWA = docker.build('nodedeploy', '-f ITE/GCL04/MK414948/Sprawozdanie2/pliki/Dockerfile.nodedeploy .')
                    TDWA.run("-d -p 3000:3000 --network=deploy --name node")
                    //Uruchamiamy kontener curla by wykonć test łączności
                    sh 'docker run --rm --network=deploy curlimages/curl:latest -L -v  http://node:3000'
                    //Czyszczenie
                    sh 'docker stop node'
                    sh 'docker container rm node'
                    sh 'docker network rm deploy'
                    sh 'docker rmi nodedeploy'
                }
            }
        }
        stage('Publish') {
            steps {
                script{
                sh 'docker network create publish || true'
                sh'''
                docker run --network=publish --name verdaccio -d -p 4873:4873 verdaccio/verdaccio || docker start verdaccio
                '''
                def publishImg = docker.build('nodepublish', '-f ITE/GCL04/MK414948/Sprawozdanie2/pliki/Dockerfile.nodepublish .')
                def container = publishImg.run(" --network=publish --name node")
                sleep 5;
                sh 'docker stop node'
                sh 'docker network rm publish'
                }
            }
        }
    }
    post {
            always {
                // Czyszczenie po zakończeniu
                sh 'docker system prune -af'
                sh 'rm -rf ITE'
            }
        }
    }