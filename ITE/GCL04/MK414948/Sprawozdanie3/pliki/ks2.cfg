# Generated by Anaconda 41.35
# Generated by pykickstart v3.58
#version=DEVEL

# Keyboard layouts
keyboard --vckeymap=pl --xlayouts='pl'
# System language
lang pl_PL.UTF-8

# Network information
network  --bootproto=dhcp --device=enp0s3 --ipv6=auto --activate
network  --hostname=kickstart

%packages
@^server-product-environment
docker
curl
%end

# Run the Setup Agent on first boot
firstboot --enable

url --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-41&arch=x86_64
repo --name=update --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f41&arch=x86_64

# Generated using Blivet version 3.11.0
ignoredisk --only-use=sda
autopart
# Partition clearing information
clearpart --none --initlabel

# System timezone
timezone Europe/Warsaw --utc

#Root password
rootpw root --plaintext
user --groups=wheel --name=monka --password=zaq1@WSX --plaintext --gecos="monka"

%post --log=/root/ks-post.log --interpreter=/bin/bash

# docker
systemctl enable docker
usermod -aG docker monka

cat > /usr/local/bin/start-nodejs-docker.sh << 'EOF'
#!/bin/bash
# Czekaj aż docker będzie aktywny
while ! systemctl is-active --quiet docker; do
  sleep 1
done

# Pobierz najnowszy obraz
/usr/bin/docker pull monkakrakowska/nodedummy

# Uruchom kontener (jeśli jest już uruchomiony, zatrzymaj go najpierw)
if /usr/bin/docker ps -q -f name=nodejs-container; then
  /usr/bin/docker stop nodejs-container
fi

/usr/bin/docker run --rm --name nodejs-container -p 3000:3000 monkakrakowska/nodedummy
EOF

# Nadaj uprawnienia wykonywalne
chmod +x /usr/local/bin/start-nodejs-docker.sh

# service
cat > /etc/systemd/system/nodejs-docker.service << 'EOF'
[Unit]
Description=Run Node.js app in Docker container
After=docker.service
Requires=docker.service

[Service]
Restart=always
ExecStart=/usr/local/bin/start-nodejs-docker.sh

[Install]
WantedBy=multi-user.target
EOF

systemctl enable nodejs-docker.service
%end

reboot
