pipeline {
    agent any

    environment {
        DOCKER_HOST = "tcp://localhost:2376"
        DOCKER_CERT_PATH = "/certs/client"
        DOCKER_TLS_VERIFY = "1"
        BUILD_IMAGE = "cpm_build"
        TEST_IMAGE = "cpm_test"
        DEPLOY_IMAGE = "cpm_deploy"
    }

    stages {
        stage('Build') {
            steps {
                sh "docker build -t ${BUILD_IMAGE} -f Dockerfile.cpmbuild ."
            }
        }

        stage('Test') {
            steps {
                sh """
                    docker build -t ${TEST_IMAGE} -f Dockerfile.cpmtest .
                    docker run --rm ${TEST_IMAGE}
                """
            }
        }

        stage('Deploy') {
            steps {
                sh """
                    docker build -t ${DEPLOY_IMAGE} -f Dockerfile.cpmdeploy .
                    docker run -d --name cpm_app -p 3000:3000 ${DEPLOY_IMAGE}
                    sleep 5
                """
            }
        }

        stage('Test Deploy') {
            steps {
                sh """
                    docker exec cpm_app curl -s http://localhost:3000 || (echo 'Smoke test failed' && false)
                """  
            }
        }

        stage('Publish') {
            steps {
                sh """
                    mkdir -p artifacts
                    docker save ${BUILD_IMAGE} -o artifacts/cpm_build.tar
                """
                archiveArtifacts artifacts: 'artifacts/cpm_build.tar', fingerprint: true
            }
        }
    }

    post {
        always {
            sh "docker container rm -f cpm_app || true"
            sh "docker image rm ${BUILD_IMAGE} ${TEST_IMAGE} || true"
            sh "docker system prune -af || true"
        }
    }
}
