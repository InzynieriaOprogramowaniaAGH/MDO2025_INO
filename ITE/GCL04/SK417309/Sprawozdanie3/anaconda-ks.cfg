# Generated by Anaconda 41.35
# Generated by pykickstart v3.58
#version=DEVEL
# Keyboard layouts
keyboard --vckeymap=pl --xlayouts='pl'
# System language
lang pl_PL.UTF-8
# Default hostname change
network --bootproto=dhcp --device=eth0 --onboot=on --hostname=kickstart
# Repository
url --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-39&arch=x86_64
repo --name=update --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f39&arch=x86_64

%packages
@^custom-environment
docker
docker-compose
git
curl
%end

# Run the Setup Agent on first boot
firstboot --enable
# Generated using Blivet version 3.11.0
ignoredisk --only-use=sda
autopart
# Partition clearing information
clearpart --none --initlabel
# System timezone
timezone Europe/Warsaw --utc
# Root password
rootpw --iscrypted --allow-ssh $y$j9T$askU93gHDIYO2y8RyB.MKPPD$W7JpUDFHWnktkWJWjUrmPSqvZ0HS1Aw6fdO/.fIqz55
user --groups=wheel,docker --name=skwasny --password=$y$j9T$y/ljs73eWbJeYh62swN9.Pbt$/axoHX56WzlN.j7Vq1J8Vz.hkyO2X87s1Ct47/32USB --iscrypted --gecos="Szczepan KwaÅ›ny"

%post --log=/var/log/kickstart-post.log
# Enable and start Docker service
systemctl enable docker
systemctl start docker

# Add user to docker group (already done in user definition above)
usermod -aG docker skwasny

# Create application directory
mkdir -p /opt/exam-app
cd /opt/exam-app

# Create docker-compose.yml for the application
cat > docker-compose.yml << 'EOF'
version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: exam-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: exam_db
      MYSQL_USER: exam_user
      MYSQL_PASSWORD: exam_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  exam-app:
    image: sauer88/exam-seat-arrangement:latest
    container_name: exam-app
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=exam_db
      - DB_USER=exam_user
      - DB_PASSWORD=exam_password
    depends_on:
      - mysql
    restart: unless-stopped

volumes:
  mysql_data:
EOF

# Change ownership to the user
chown -R skwasny:skwasny /opt/exam-app

# Create systemd service for auto-starting the application
cat > /etc/systemd/system/exam-app.service << 'EOF'
[Unit]
Description=Exam Seat Arrangement Application
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=/opt/exam-app
ExecStart=/usr/bin/docker-compose up -d
ExecStop=/usr/bin/docker-compose down
TimeoutStartSec=0
User=skwasny
Group=skwasny

[Install]
WantedBy=multi-user.target
EOF

# Enable the service to start on boot
systemctl enable exam-app.service

# Pull the Docker images to avoid delays on first boot
docker pull mysql:8.0
docker pull sauer88/exam-seat-arrangement:latest

# Create a startup script for additional configuration if needed
cat > /opt/exam-app/startup.sh << 'EOF'
#!/bin/bash
# Wait for MySQL to be ready
echo "Waiting for MySQL to be ready..."
sleep 30

# Optional: Run any database initialization scripts here
# docker-compose exec mysql mysql -u exam_user -pexam_password exam_db < init.sql

echo "Application should be accessible at http://localhost:8080"
EOF

chmod +x /opt/exam-app/startup.sh
chown skwasny:skwasny /opt/exam-app/startup.sh

# Create a convenient management script
cat > /opt/exam-app/manage.sh << 'EOF'
#!/bin/bash
case "$1" in
    start)
        docker-compose up -d
        echo "Application started. Access at http://localhost:8080"
        ;;
    stop)
        docker-compose down
        echo "Application stopped"
        ;;
    restart)
        docker-compose down
        docker-compose up -d
        echo "Application restarted"
        ;;
    logs)
        docker-compose logs -f
        ;;
    status)
        docker-compose ps
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|logs|status}"
        exit 1
        ;;
esac
EOF

chmod +x /opt/exam-app/manage.sh
chown skwasny:skwasny /opt/exam-app/manage.sh

# Configure firewall to allow application access
firewall-cmd --permanent --add-port=8080/tcp
firewall-cmd --permanent --add-port=3306/tcp
firewall-cmd --reload

%end

%post --nochroot --log=/mnt/sysimage/var/log/kickstart-post-nochroot.log
# Any post-installation tasks that need to run outside the chroot environment
echo "Kickstart installation completed successfully" >> /mnt/sysimage/var/log/kickstart-post.log
%end
