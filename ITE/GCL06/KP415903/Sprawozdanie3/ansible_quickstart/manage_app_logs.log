[kpudzisz@main ansible_quickstart]$ ansible-playbook -i inventory.ini -u ansible run_manage_app.yaml

PLAY [Endpoints] ****************************************************************************************************************

TASK [Gathering Facts] **********************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Install required packages] ***********************************************************************************
changed: [ansible-target]

TASK [manage_app : Add Docker CE repository] ************************************************************************************
changed: [ansible-target]

TASK [manage_app : Install Docker CE] *******************************************************************************************
changed: [ansible-target]

TASK [manage_app : Ensure Docker service is started and enabled] ****************************************************************
changed: [ansible-target]

TASK [manage_app : Pull image from Docker Hub] **********************************************************************************
An exception occurred during task execution. To see the full traceback, use -vvv. The error was: ModuleNotFoundError: No module named 'requests'
fatal: [ansible-target]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (requests) on ansible-target's Python /usr/bin/python3. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}

PLAY RECAP **********************************************************************************************************************
ansible-target             : ok=5    changed=4    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

[kpudzisz@main ansible_quickstart]$ ansible-playbook -i inventory.ini -u ansible run_manage_app.yaml

PLAY [Endpoints] **********************************************************************************************************************************************

TASK [Gathering Facts] ****************************************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Install required packages] *****************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Add Docker CE repository] ******************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Install Docker CE] *************************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Ensure Docker service is started and enabled] **********************************************************************************************
ok: [ansible-target]

TASK [manage_app : Install python3-requests on target] ********************************************************************************************************
changed: [ansible-target]

TASK [manage_app : Pull image from Docker Hub] ****************************************************************************************************************
changed: [ansible-target]

TASK [manage_app : Run container] *****************************************************************************************************************************
changed: [ansible-target]

TASK [manage_app : Test HTTP response from container] *********************************************************************************************************
changed: [ansible-target]

TASK [manage_app : Show HTTP status code] *********************************************************************************************************************
ok: [ansible-target] => {
    "curl_result.stdout": "200"
}

TASK [manage_app : Stop deploy container] *********************************************************************************************************************
fatal: [ansible-target]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (ansible.builtin.docker_container) module: ignore_errors. Supported parameters include: api_version, auto_remove, blkio_weight, ca_path, cap_drop, capabilities, cgroup_parent, cgroupns_mode, cleanup, client_cert, client_key, command, command_handling, comparisons, container_default_behavior, cpu_period, cpu_quota, cpu_shares, cpus, cpuset_cpus, cpuset_mems, debug, default_host_ip, detach, device_cgroup_rules, device_read_bps, device_read_iops, device_requests, device_write_bps, device_write_iops, devices, dns_opts, dns_search_domains, dns_servers, docker_host, domainname, entrypoint, env, env_file, etc_hosts, exposed_ports, force_kill, groups, healthcheck, healthy_wait_timeout, hostname, ignore_image, image, image_comparison, image_label_mismatch, image_name_mismatch, init, interactive, ipc_mode, keep_volumes, kernel_memory, kill_signal, labels, links, log_driver, log_options, mac_address, memory, memory_reservation, memory_swap, memory_swappiness, mounts, name, network_mode, networks, networks_cli_compatible, oom_killer, oom_score_adj, output_logs, paused, pid_mode, pids_limit, platform, privileged, publish_all_ports, published_ports, pull, pull_check_mode_behavior, purge_networks, read_only, recreate, removal_wait_timeout, restart, restart_policy, restart_retries, runtime, security_opts, shm_size, ssl_version, state, stop_signal, stop_timeout, storage_opts, sysctls, timeout, tls, tls_hostname, tmpfs, tty, ulimits, use_ssh_client, user, userns_mode, uts, validate_certs, volume_driver, volumes, volumes_from, working_dir (ca_cert, cacert_path, cert_path, docker_api_version, docker_url, expose, exposed, forcekill, key_path, log_opt, ports, tls_ca_cert, tls_client_cert, tls_client_key, tls_verify)."}

PLAY RECAP ****************************************************************************************************************************************************
ansible-target             : ok=10   changed=4    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

[kpudzisz@main ansible_quickstart]$ ansible-playbook -i inventory.ini -u ansible run_manage_app.yaml

PLAY [Endpoints] **********************************************************************************************************************************************

TASK [Gathering Facts] ****************************************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Install required packages] *****************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Add Docker CE repository] ******************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Install Docker CE] *************************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Ensure Docker service is started and enabled] **********************************************************************************************
ok: [ansible-target]

TASK [manage_app : Install python3-requests on target] ********************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Pull image from Docker Hub] ****************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Run container] *****************************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Test HTTP response from container] *********************************************************************************************************
changed: [ansible-target]

TASK [manage_app : Show HTTP status code] *********************************************************************************************************************
ok: [ansible-target] => {
    "curl_result.stdout": "200"
}

TASK [manage_app : Stop deploy container] *********************************************************************************************************************
changed: [ansible-target]

TASK [manage_app : Remove deploy container] *******************************************************************************************************************
fatal: [ansible-target]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (ansible.builtin.docker_container) module: ignore_errors. Supported parameters include: api_version, auto_remove, blkio_weight, ca_path, cap_drop, capabilities, cgroup_parent, cgroupns_mode, cleanup, client_cert, client_key, command, command_handling, comparisons, container_default_behavior, cpu_period, cpu_quota, cpu_shares, cpus, cpuset_cpus, cpuset_mems, debug, default_host_ip, detach, device_cgroup_rules, device_read_bps, device_read_iops, device_requests, device_write_bps, device_write_iops, devices, dns_opts, dns_search_domains, dns_servers, docker_host, domainname, entrypoint, env, env_file, etc_hosts, exposed_ports, force_kill, groups, healthcheck, healthy_wait_timeout, hostname, ignore_image, image, image_comparison, image_label_mismatch, image_name_mismatch, init, interactive, ipc_mode, keep_volumes, kernel_memory, kill_signal, labels, links, log_driver, log_options, mac_address, memory, memory_reservation, memory_swap, memory_swappiness, mounts, name, network_mode, networks, networks_cli_compatible, oom_killer, oom_score_adj, output_logs, paused, pid_mode, pids_limit, platform, privileged, publish_all_ports, published_ports, pull, pull_check_mode_behavior, purge_networks, read_only, recreate, removal_wait_timeout, restart, restart_policy, restart_retries, runtime, security_opts, shm_size, ssl_version, state, stop_signal, stop_timeout, storage_opts, sysctls, timeout, tls, tls_hostname, tmpfs, tty, ulimits, use_ssh_client, user, userns_mode, uts, validate_certs, volume_driver, volumes, volumes_from, working_dir (ca_cert, cacert_path, cert_path, docker_api_version, docker_url, expose, exposed, forcekill, key_path, log_opt, ports, tls_ca_cert, tls_client_cert, tls_client_key, tls_verify)."}

PLAY RECAP ****************************************************************************************************************************************************
ansible-target             : ok=11   changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

[kpudzisz@main ansible_quickstart]$ ansible-playbook -i inventory.ini -u ansible run_manage_app.yaml

PLAY [Endpoints] **********************************************************************************************************************************************

TASK [Gathering Facts] ****************************************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Install required packages] *****************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Add Docker CE repository] ******************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Install Docker CE] *************************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Ensure Docker service is started and enabled] **********************************************************************************************
ok: [ansible-target]

TASK [manage_app : Install python3-requests on target] ********************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Pull image from Docker Hub] ****************************************************************************************************************
ok: [ansible-target]

TASK [manage_app : Run container] *****************************************************************************************************************************
changed: [ansible-target]

TASK [manage_app : Test HTTP response from container] *********************************************************************************************************
changed: [ansible-target]

TASK [manage_app : Show HTTP status code] *********************************************************************************************************************
ok: [ansible-target] => {
    "curl_result.stdout": "200"
}

TASK [manage_app : Stop deploy container] *********************************************************************************************************************
changed: [ansible-target]

TASK [manage_app : Remove deploy container] *******************************************************************************************************************
changed: [ansible-target]

PLAY RECAP ****************************************************************************************************************************************************
ansible-target             : ok=12   changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0