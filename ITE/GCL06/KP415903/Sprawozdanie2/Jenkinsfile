pipeline {
    agent any
    
    environment {
        DOCKER_NETWORK = "ci-network"
        APP_VERSION = sh(script: 'date +%Y.%m.%d-%H%M%S', returnStdout: true).trim()
    }

    stages {
        stage('Prepare Environment') {
            steps {
                script {
                    sh '''
                    docker rm -f deploy-container test-container || true
                    docker rmi nodebuild nodetest deploy || true
                    docker network create ${DOCKER_NETWORK} || true
                    rm -f dummy-node-project-*.tar.gz
                    '''
                }
            }
        }
        
        stage('Clone repo') {
            steps {
                script {
                    sh '''
                    if [ -d "MDO2025_INO" ]; then
                        rm -rf MDO2025_INO
                    fi
                    git clone https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO
                    '''
                    dir('MDO2025_INO') {
                        sh 'git checkout KP415903'
                    }
                }
            }
        }
        
        stage('Build "build image"') {
            steps {
                script {
                    dir('MDO2025_INO/ITE/GCL06/KP415903/Sprawozdanie1/Lab3 dockerfiles/') {
                        sh 'docker build -t nodebuild -f Dockerfile.nodebuild .'
                    }
                }
            }
        }
        
        stage('Build "test image"') {
            steps {
                script {
                    dir('MDO2025_INO/ITE/GCL06/KP415903/Sprawozdanie1/Lab3 dockerfiles/') {
                        sh 'docker build -t nodetest -f Dockerfile.nodetest .'
                    }
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                script {
                    sh '''
                    docker network create ${DOCKER_NETWORK} || true
                    docker run --rm --network ${DOCKER_NETWORK} --name test-container nodetest
                    '''
                }
            }
        }
        
        stage('Build Deploy Image') {
            steps {
                script {
                    dir('MDO2025_INO/ITE/GCL06/KP415903/Sprawozdanie2/') {
                        sh 'docker build -t deploy -f Dockerfile.deploy .'
                    }
                }
            }
        }
        
        stage('Deploy Application') {
            steps {
                script {
                    sh '''
                    docker stop deploy-container || true
                    docker rm deploy-container || true
                    docker run -d --network ${DOCKER_NETWORK} --name deploy-container deploy
                    sleep 5
                    '''
                }
            }
        }
        
        stage('Curl Test') {
            steps {
                script {
                    sh '''
                    docker run --rm --network ${DOCKER_NETWORK} curlimages/curl curl deploy-container:3000
                    '''
                }
            }
        }
        
        stage('Publish') {
            steps {
                script {
                    dir('MDO2025_INO/ITE/GCL06/KP415903/Sprawozdanie2/') {
                        withCredentials([string(credentialsId: 'NPM_TOKEN', variable: 'NPM_TOKEN')]) {
                            sh """
                                docker build -f Dockerfile.publish \
                                  --build-arg NPM_TOKEN=$NPM_TOKEN \
                                  --build-arg APP_VERSION=${APP_VERSION} \
                                  -t npmpublish .
                                docker run --rm -e NPM_TOKEN=$NPM_TOKEN npmpublish
                            """
                        }
                    }
                    
                    // Archive
                    sh '''
                        docker save deploy | gzip > dummy-node-project-${APP_VERSION}.tar.gz
                    '''
                    archiveArtifacts artifacts: "dummy-node-project-${APP_VERSION}.tar.gz", fingerprint: true
                }
            }
        }
        
    }
}