pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git'
        BRANCH = 'DR416985'
        DOCKERFILE_PATH = 'ITE/GCL06/DR416985/lab5/node-build.Dockerfile'
        DOCKER_CONTEXT = 'ITE/GCL06/DR416985/lab5'
        DOCKER_IMAGE = 'node-build-image'
        TEST_IMAGE = 'node-test-image'
        DEPLOY_IMAGE = 'node-deploy-image'
    }

    stages {
        stage('Klonowanie repozytorium') {
            steps {
                git branch: "${BRANCH}", url: "${GIT_REPO}"
            }
        }

        stage('Budowanie obrazu') {
            steps {
                dir("${DOCKER_CONTEXT}") {
                    sh "docker build -t ${DOCKER_IMAGE} -f ${DOCKERFILE_PATH} ."
                }
            }
        }

        stage('Testowanie') {
            steps {
                dir("${DOCKER_CONTEXT}") {
                    sh "docker build -t ${TEST_IMAGE} -f node-test.Dockerfile ."
                    sh "docker run --rm ${TEST_IMAGE}"
                }
            }
        }

        stage('Deploy') {
            steps {
                sh 'docker network create test_network || true'
                dir("${DOCKER_CONTEXT}") {
                    sh "docker build -t ${DEPLOY_IMAGE} -f node-deploy.Dockerfile ."
                    sh "docker run -d --rm --network test_network --name app ${DEPLOY_IMAGE}"
                }
            }
        }

        stage('Sprawdzenie działania aplikacji') {
            steps {
                sh "docker run --rm --network test_network curlimages/curl curl -v http://app:3000"
            }
        }
    }

    post {
        success {
            echo 'Pipeline zakończony sukcesem.'
        }
        failure {
            echo 'Pipeline zakończył się błędem.'
        }
    }
}
