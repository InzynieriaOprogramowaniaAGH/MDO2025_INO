// Jenkinsfile - Pełny pipeline CI/CD z Builderem, Testerem, Runtime oraz archiwizacją artefaktów

pipeline {
    agent any

    environment {
        INSTALL_DIR = '/tmp/irssi-install'
        IMAGE_BUILDER = 'irssi-builder'
        IMAGE_RUNTIME = 'irssi-runtime'
        BUILD_CONTEXT = 'ITE/GCL06/BM417353/Sprawozdanie 2'
    }

    stages {
        stage('Checkout') {
            steps {
                dir(env.BUILD_CONTEXT) {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: '*/main']],
                        userRemoteConfigs: [[
                            url: 'https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git'
                        ]]
                    ])
                }
            }
        }

        stage('Build & Test in Builder') {
            agent {
                dockerfile {
                    filename 'Dockerfile.build'
                    dir "${env.BUILD_CONTEXT}"
                    additionalBuildArgs '--pull'
                }
            }
            steps {
                dir(env.BUILD_CONTEXT) {
                    sh '''
                        meson setup builddir --wrap-mode=nodownload || true
                        meson compile -C builddir
                        meson test -C builddir || true
                        builddir/src/fe-text/irssi --version || true
                    '''
                }
            }
        }

        stage('Install & Package') {
            steps {
                dir(env.BUILD_CONTEXT) {
                    sh '''
                        mkdir -p ${INSTALL_DIR}
                        meson install -C builddir --destdir=${INSTALL_DIR}
                        tar czf irssi.tar.gz -C /tmp irssi-install
                    '''
                }
            }
        }

        stage('Build RPM') {
            steps {
                dir(env.BUILD_CONTEXT) {
                    sh '''
                        rm -f irssi-1.0-1.x86_64.rpm
                        fpm -s dir -t rpm \
                            -n irssi \
                            -v 1.0 \
                            -C ${INSTALL_DIR} \
                            --prefix=/ \
                            .
                    '''
                }
            }
        }

        stage('Build Runtime Image') {
            steps {
                dir(env.BUILD_CONTEXT) {
                    sh 'docker build -t ${IMAGE_RUNTIME} -f Dockerfile.runtime .'
                }
            }
        }

        stage('Run Runtime Image') {
            steps {
                sh 'docker run --rm ${IMAGE_RUNTIME} irssi --version || true'
            }
        }

        stage('Archive & Publish') {
            steps {
                dir(env.BUILD_CONTEXT) {
                    archiveArtifacts artifacts: '*.tar.gz,*.rpm', fingerprint: true
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}
