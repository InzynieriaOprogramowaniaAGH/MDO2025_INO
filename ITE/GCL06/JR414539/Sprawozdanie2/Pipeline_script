pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git'
        BRANCH = 'JR414539'
        DOCKERFILE_PATH = 'ITE/GCL06/JR414539/Sprawozdanie1/Dockerfile.build'
        DOCKER_CONTEXT = 'ITE/GCL06/JR414539/Sprawozdanie1'
        DOCKER_IMAGE = 'wget-jenkins-build'
        DEPLOY_IMAGE = 'wget-deploy-test'
        TEST_IMAGE = 'wget-tester'
    }

    stages {
        stage('üì• Klonowanie repozytorium') {
            steps {
                git branch: "${BRANCH}", url: "${GIT_REPO}"
            }
        }

        stage('üìÑ Sprawdzenie Dockerfile') {
            steps {
                sh "ls -la ${DOCKER_CONTEXT}"
                sh "cat ${DOCKERFILE_PATH}"
            }
        }

        stage('üê≥ Budowanie obrazu Dockera') {
            steps {
                sh "docker build -t ${DOCKER_IMAGE} -f ${DOCKERFILE_PATH} ${DOCKER_CONTEXT}"
            }
        }

        stage('üöÄ Deploy & Test wget') {
            steps {
                echo 'Budujƒô deploy-image do testu wget'
                sh "docker build -t ${DEPLOY_IMAGE} -f ITE/GCL06/JR414539/Sprawozdanie2/Dockerfile_deploy ITE/GCL06/JR414539/Sprawozdanie2"
                echo 'Odpalam kontener i testujƒô wget'
                sh "docker run --rm ${DEPLOY_IMAGE}"
            }
        }
        
        stage('üì¶ Build wget .deb package') {
           steps {
                echo 'Budujƒô paczkƒô wget.deb'
                sh 'docker create --name wget-builder ${DOCKER_IMAGE}'
                sh 'docker cp wget-builder:/opt/wget/wget_1.0-1_amd64.deb wget.deb'
                sh 'docker rm wget-builder'
                archiveArtifacts artifacts: 'wget.deb', fingerprint: true
            }
        }
        
        stage('üîç Test wget (Tester)') {
           steps {
                echo 'Budujƒô obraz tester-a'
                sh "docker build -t ${TEST_IMAGE} -f ITE/GCL06/JR414539/Sprawozdanie2/Dockerfile.test ITE/GCL06/JR414539/Sprawozdanie2"
                echo 'Odpalam testy wget'
                sh "docker run --rm ${TEST_IMAGE}"
            }
        }

    }

    post {
        success {
            echo '‚úÖ Pipeline zako≈Ñczony sukcesem.'
        }
        failure {
            echo '‚ùå Pipeline zako≈Ñczy≈Ç siƒô b≈Çƒôdem.'
        }
    }
}