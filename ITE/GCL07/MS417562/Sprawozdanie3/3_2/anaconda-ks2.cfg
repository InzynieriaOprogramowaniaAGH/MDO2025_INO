# Generated by Anaconda 41.35
# Generated by pykickstart v3.58
#version=DEVEL
graphical

url --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-41&arch=x86_64
repo --name="updates" --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f41&arch=x86_64

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

network --hostname=fedoraInstall
network --bootproto=dhcp --device=link --activate --onboot=yes

%packages
@^server-product-environment
@admin-tools
@cloud-infrastructure
@text-internet
moby-engine 

%end

# Run the Setup Agent on first boot
firstboot --enable

# System timezone
timezone Europe/Warsaw --utc

# Root password
rootpw --lock

user --groups=wheel --name=msior --password=123 --plaintext --gecos="Michal Slezak"

# Partitioning
ignoredisk --only-use=sda
clearpart --all --initlabel
autopart --type=lvm

reboot

%post --log=/root/kickstart-post.log

# --- Konfiguracja Docker i uruchomienie kontenera po starcie systemu ---

systemctl enable docker.service

cat << 'EOF' > /usr/local/sbin/run-my-app-container.sh
#!/bin/bash

IMAGE_NAME="msior/express-deploy-img"
CONTAINER_NAME="my-express-app"

sleep 10

echo "Pobieranie obrazu $IMAGE_NAME..."
if ! docker pull $IMAGE_NAME; then
    echo "Błąd podczas pobierania obrazu $IMAGE_NAME. Sprawdź logi."
    exit 1
fi

echo "Sprawdzanie, czy kontener $CONTAINER_NAME już istnieje..."
if [ "$(docker ps -aq -f name=^/${CONTAINER_NAME}$)" ]; then
    echo "Zatrzymywanie istniejącego kontenera $CONTAINER_NAME..."
    docker stop $CONTAINER_NAME
    echo "Usuwanie istniejącego kontenera $CONTAINER_NAME..."
    docker rm $CONTAINER_NAME
fi

echo "Uruchamianie kontenera $CONTAINER_NAME z obrazu $IMAGE_NAME..."
if ! docker run -d --name $CONTAINER_NAME -p 8080:3000 --restart=unless-stopped $IMAGE_NAME; then
    echo "Błąd podczas uruchamiania kontenera $CONTAINER_NAME. Sprawdź logi."
    exit 1
fi

echo "Kontener $CONTAINER_NAME został pomyślnie uruchomiony."
EOF

chmod +x /usr/local/sbin/run-my-app-container.sh

cat << 'EOF' > /etc/systemd/system/run-my-app-container.service
[Unit]
Description=Pull and run my application container
Requires=docker.service
After=network-online.target docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/local/sbin/run-my-app-container.sh

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable run-my-app-container.service

echo "Konfiguracja Docker i usługi startowej dla kontenera zakończona."
echo "Kontener msior/express-deploy-img zostanie pobrany i uruchomiony po restarcie systemu."
echo "Będzie dostępny na porcie 8080 hosta (mapowany na port 3000 kontenera)."

# --- Koniec konfiguracji Docker ---

%end