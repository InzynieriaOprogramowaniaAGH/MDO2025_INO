pipeline {
    agent any

    environment {
        BUILDER_IMG = "irssi-builder:${BUILD_NUMBER}"
        RUNTIME_IMG = "irssi-runtime:${BUILD_NUMBER}"
        TESTER_IMG = "irssi-tester:${BUILD_NUMBER}"
        TAR_NAME = "irssi-${BUILD_NUMBER}.tar.gz"
    }

    stages {
        stage('Clone Irssi') {
            steps {
                dir('external/irssi') {
                    git 'https://github.com/irssi/irssi.git'
                }
            }
        }

        stage('Build ➜ builder image') {
            steps {
                dir('NI409877/sprawozdanie2') {
                    script {
                        sh '''
                        docker build -t ${BUILDER_IMG} -f Dockerfile.builder .
                        docker run --name build-irssi ${BUILDER_IMG} bash -c "
                            meson Build external/irssi && ninja -C Build
                        "
                        docker commit build-irssi irssi-built
                        docker rm build-irssi
                        '''
                    }
                }
            }
        }

        stage('Test') {
            steps {
                dir('NI409877/sprawozdanie2') {
                    script {
                        sh '''
                        docker build -t ${TESTER_IMG} -f Dockerfile.test .
                        docker run --rm ${TESTER_IMG} bash -c "meson test -C /app/builddir --print-errorlogs --logbase junit" | tee test.log
                        '''
                    }
                }
            }
        }

        stage('Smoke Test ➜ runtime image') {
            steps {
                dir('NI409877/sprawozdanie2') {
                    script {
                        sh '''
                        docker build -t ${RUNTIME_IMG} -f Dockerfile.runtime .
                        docker run --rm ${RUNTIME_IMG} irssi --version
                        '''
                    }
                }
            }
        }

        stage('Package ➜ tar.gz artifact') {
            steps {
                script {
                    sh '''
                    cid=$(docker create ${BUILDER_IMG})
                    mkdir -p .out
                    docker cp ${cid}:/usr .out/
                    docker rm ${cid}
                    tar -czf ${TAR_NAME} -C .out usr
                    '''
                }
            }
        }

        stage('Publish Images') {
            steps {
                script {
                    sh '''
                    docker tag ${RUNTIME_IMG} yourdockerhubuser/irssi-runtime:latest
                    docker tag ${BUILDER_IMG} yourdockerhubuser/irssi-builder:latest
                    docker login -u yourdockerhubuser -p $DOCKERHUB_PASSWORD
                    docker push yourdockerhubuser/irssi-runtime:latest
                    docker push yourdockerhubuser/irssi-builder:latest
                    '''
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '**/test.log', allowEmptyArchive: true
            junit testResults: '**/builddir/meson-logs/*.xml', allowEmptyResults: true
            archiveArtifacts artifacts: "${TAR_NAME}", allowEmptyArchive: false
        }
    }
}
