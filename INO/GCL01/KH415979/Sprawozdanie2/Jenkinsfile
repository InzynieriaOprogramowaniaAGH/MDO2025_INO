pipeline {
    agent any
    
    environment{
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
    }
    
    stages {
        stage('Clone') {
            steps {
                git branch: 'KH415979', url: 'https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git'
            }
        }
        
        stage('Build') {
            steps {
                dir('INO/GCL01/KH415979/Sprawozdanie1') {
                    script{
                        docker.build('pico-c-image', '-f Dockerfile.picocbuild .')
                        sh 'docker images'
                    }
                }
            }
        }
        
        
        stage('Test') {
           steps {
                sh 'mkdir artifacts'
                sh 'echo "Version: ${BUILD_NUMBER}" > artifacts/test.log'
                sh 'docker run --rm pico-c-image make test >> artifacts/test.log'
                
                sh 'docker volume create exec_vol'
                dir('INO/GCL01/KH415979/Sprawozdanie2'){
                    sh 'cp -r script_directory ../../../../'
                }
                sh 'docker run --rm -v exec_vol:/mnt/exec_vol/ pico-c-image cp picoc ../mnt/exec_vol'
                sh 'echo "Version: ${BUILD_NUMBER}" > artifacts/script_test.log'
                sh 'docker run --rm --mount type=bind,src=$PWD/script_directory/,dst=/mnt/ -v exec_vol:/mnt/exec_vol/ fedora:41 mnt/exec_vol/picoc mnt/script.c >> artifacts/script_test.log'
               
           }
           
        }
        
        stage("Deploy")
        {
            steps{
                sh 'mkdir picoc_dir'
                sh 'docker run --rm --mount type=bind,src=$PWD/picoc_dir,dst=/mnt/picoc_dir -v exec_vol:/mnt/exec_vol/ fedora:41 cp mnt/exec_vol/picoc mnt/picoc_dir/'
                dir('INO/GCL01/KH415979/Sprawozdanie2'){
                    sh 'cp Dockerfile.deploy ../../../../'
                }
                script{
                    docker.build('pico-c', '-f Dockerfile.deploy .')
                    sh 'docker images'
                    sh 'docker tag pico-c khan9/pico-c_interactive:1.${BUILD_NUMBER}'
                }
            }
        }
        
        stage("Publish"){
            steps{
                sh "docker login -u ${DOCKERHUB_CREDENTIALS_USR} -p ${DOCKERHUB_CREDENTIALS_PSW}"
                sh 'docker push khan9/pico-c_interactive:1.${BUILD_NUMBER}'
                
                archiveArtifacts artifacts: "artifacts/test.log", fingerprint: true
                archiveArtifacts artifacts: "artifacts/script_test.log", fingerprint: true
            }
        }
        
    }
    
    post{
        always{
            sh 'docker logout'
            sh 'rm -r artifacts'
            sh 'rm -r picoc_dir'
            sh 'docker system prune -a -f'
        }
    }
}