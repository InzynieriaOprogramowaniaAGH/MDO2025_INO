Started by user konrad
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/pipeline z testami
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone)
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/pipeline z testami/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git # timeout=10
Fetching upstream changes from https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git
 > git --version # timeout=10
 > git --version # 'git version 2.39.5'
 > git fetch --tags --force --progress -- https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/KB415987^{commit} # timeout=10
Checking out Revision 4b1c3abb82e487502f32679748cdfefd1933f978 (refs/remotes/origin/KB415987)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 4b1c3abb82e487502f32679748cdfefd1933f978 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D KB415987 # timeout=10
 > git checkout -b KB415987 4b1c3abb82e487502f32679748cdfefd1933f978 # timeout=10
Commit message: "KB415987: ...."
 > git rev-list --no-walk 4b1c3abb82e487502f32679748cdfefd1933f978 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] dir
Running in /var/jenkins_home/workspace/pipeline z testami/INO/GCL01/KB415987/Sprawozdanie2/resources
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker build -t cjson_bld_img -f Dockerfile.build .
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.build
#1 transferring dockerfile: 344B done
#1 DONE 0.1s

#2 [internal] load metadata for docker.io/library/ubuntu:latest
#2 DONE 0.6s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.1s

#4 [1/6] FROM docker.io/library/ubuntu:latest@sha256:6015f66923d7afbc53558d7ccffd325d43b4e249f41a6e93eef074c9505d2233
#4 DONE 0.0s

#5 [2/6] RUN apt update && apt install -y build-essential cmake make gcc git
#5 CACHED

#6 [3/6] WORKDIR /app
#6 CACHED

#7 [4/6] RUN git clone https://github.com/DaveGamble/cJSON.git && cd cJSON && mkdir build && cd build
#7 CACHED

#8 [5/6] WORKDIR /app/cJSON/build
#8 CACHED

#9 [6/6] RUN cmake .. && make
#9 CACHED

#10 exporting to image
#10 exporting layers done
#10 writing image sha256:0ef1a55d787b80d6851a3f2645ec87a5f2e81bf09e73d2fc07e024598c055683 done
#10 naming to docker.io/library/cjson_bld_img done
#10 DONE 0.0s
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test_Build)
[Pipeline] dir
Running in /var/jenkins_home/workspace/pipeline z testami/INO/GCL01/KB415987/Sprawozdanie2/resources
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker build -t cjsontest -f Dockerfile.cjsontest .
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.cjsontest
#1 transferring dockerfile: 173B done
#1 DONE 0.1s

#2 [internal] load metadata for docker.io/library/cjson_bld_img:latest
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/2] FROM docker.io/library/cjson_bld_img:latest
#4 DONE 0.0s

#5 [2/2] WORKDIR /app/cJSON/build
#5 CACHED

#6 exporting to image
#6 exporting layers done
#6 writing image sha256:42d522ae18f1ce19e7a945f49fd5282a9113f3d2ae00ab57539dd14669655b7d done
#6 naming to docker.io/library/cjsontest done
#6 DONE 0.0s
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] dir
Running in /var/jenkins_home/workspace/pipeline z testami/INO/GCL01/KB415987/Sprawozdanie2
[Pipeline] {
[Pipeline] sh
+ mkdir -p artifacts
[Pipeline] sh
+ docker run --rm cjsontest
+ tee artifacts/test_log.log
Running tests...
Test project /app/cJSON/build
      Start  1: cJSON_test
 1/19 Test  #1: cJSON_test .......................   Passed    0.00 sec
      Start  2: parse_examples
 2/19 Test  #2: parse_examples ...................   Passed    0.00 sec
      Start  3: parse_number
 3/19 Test  #3: parse_number .....................   Passed    0.00 sec
      Start  4: parse_hex4
 4/19 Test  #4: parse_hex4 .......................   Passed    0.01 sec
      Start  5: parse_string
 5/19 Test  #5: parse_string .....................   Passed    0.00 sec
      Start  6: parse_array
 6/19 Test  #6: parse_array ......................   Passed    0.00 sec
      Start  7: parse_object
 7/19 Test  #7: parse_object .....................   Passed    0.00 sec
      Start  8: parse_value
 8/19 Test  #8: parse_value ......................   Passed    0.00 sec
      Start  9: print_string
 9/19 Test  #9: print_string .....................   Passed    0.00 sec
      Start 10: print_number
10/19 Test #10: print_number .....................   Passed    0.01 sec
      Start 11: print_array
11/19 Test #11: print_array ......................   Passed    0.00 sec
      Start 12: print_object
12/19 Test #12: print_object .....................   Passed    0.00 sec
      Start 13: print_value
13/19 Test #13: print_value ......................   Passed    0.00 sec
      Start 14: misc_tests
14/19 Test #14: misc_tests .......................   Passed    0.00 sec
      Start 15: parse_with_opts
15/19 Test #15: parse_with_opts ..................   Passed    0.00 sec
      Start 16: compare_tests
16/19 Test #16: compare_tests ....................   Passed    0.00 sec
      Start 17: cjson_add
17/19 Test #17: cjson_add ........................   Passed    0.00 sec
      Start 18: readme_examples
18/19 Test #18: readme_examples ..................   Passed    0.00 sec
      Start 19: minify_tests
19/19 Test #19: minify_tests .....................   Passed    0.00 sec

100% tests passed, 0 tests failed out of 19

Total Test time (real) =   0.10 sec
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Log_Publish)
[Pipeline] archiveArtifacts
Archiving artifacts
Recording fingerprints
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
