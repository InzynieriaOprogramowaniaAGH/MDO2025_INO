pipeline {
    agent any

    environment {
        BUILD_IMAGE = 'chalk-build'
        TEST_IMAGE = 'chalk-test'
        RUNTIME_IMAGE = 'chalk-runer'
        WORK_DIR = 'MDO2025_INO/INO/GCL02/KM415588/Sprawozdanie_2'
    }

    stages {

        stage('Clone repo przedmiotowe') {
            steps {
                    git url: 'https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git', branch: 'KM415588'

            }
        }

        stage('Build') {
            steps {
                dir("${WORK_DIR}") {
                    sh 'docker build -t ${BUILD_IMAGE} -f dockerfile.chalkbuild .'
                }
            }
        }

        stage('Test') {
            steps {
                dir("${WORK_DIR}") {
                    sh '''
                        docker build -t ${TEST_IMAGE} -f dockerfile.chalktest .
                        docker run --rm ${TEST_IMAGE} > test_output.log
                    '''
                }
            }
        }

        stage('Deploy / Smoke test') {
            steps {
                dir("${WORK_DIR}") {
                    sh '''
                        docker build -t ${RUNTIME_IMAGE} -f dockerfile.runer .
                        docker run --rm ${RUNTIME_IMAGE} > smoke_output.log || true
                    '''
                }
            }
        }

        stage('Create ZIP artifact') {
            steps {
                dir("${WORK_DIR}") {
                    sh '''
                        mkdir -p result
                        cp -r chalk-pipe/distribution result/ || true
                        cp test_output.log smoke_output.log result/
                        zip -r chalk-artifacts.zip result
                    '''
                }
            }
        }

        stage('Archive artifacts') {
            steps {
                archiveArtifacts artifacts: "${WORK_DIR}/chalk-artifacts.zip", fingerprint: true
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline zakończony sukcesem – artefakt ZIP gotowy.'
        }
        failure {
            echo '❌ Pipeline nie powiódł się – sprawdź logi.'
        }
    }
}
