Started by user Meg Paskowski
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/p4
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Klonowanie repozytorium)
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/p4/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git # timeout=10
Fetching upstream changes from https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git
 > git --version # timeout=10
 > git --version # 'git version 2.39.5'
 > git fetch --tags --force --progress -- https://github.com/InzynieriaOprogramowaniaAGH/MDO2025_INO.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/MP417574^{commit} # timeout=10
Checking out Revision 39eaa3cf999ed234986df7c7b87ac81f0d0c3b97 (refs/remotes/origin/MP417574)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 39eaa3cf999ed234986df7c7b87ac81f0d0c3b97 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D MP417574 # timeout=10
 > git checkout -b MP417574 39eaa3cf999ed234986df7c7b87ac81f0d0c3b97 # timeout=10
Commit message: "MP417574: Przeniesienie plików"
 > git rev-list --no-walk 39eaa3cf999ed234986df7c7b87ac81f0d0c3b97 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Budowanie obrazu)
[Pipeline] dir
Running in /var/jenkins_home/workspace/p4/INO/GCL02/MP417574/Sprawozdanie2/Dockerfiles
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker build -t cjson-build -f Dockerfile.build1 .
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.build1
#1 transferring dockerfile: 302B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/ubuntu:latest
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/5] FROM docker.io/library/ubuntu:latest
#4 DONE 0.0s

#5 [2/5] RUN apt update && apt install -y git cmake gcc g++ make
#5 CACHED

#6 [3/5] WORKDIR /app
#6 CACHED

#7 [4/5] RUN git clone https://github.com/DaveGamble/cJSON.git .
#7 CACHED

#8 [5/5] RUN mkdir build && cd build && cmake .. && make
#8 CACHED

#9 exporting to image
#9 exporting layers done
#9 writing image sha256:ac05b4678f8419d5d5d2eb7b075914a110a3056de80e837bfa0798e9f13145b6 done
#9 naming to docker.io/library/cjson-build done
#9 DONE 0.0s
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Budowanie obrazu testowego)
[Pipeline] dir
Running in /var/jenkins_home/workspace/p4/INO/GCL02/MP417574/Sprawozdanie2/Dockerfiles
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker build -t cjson-test -f Dockerfile.test .
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.test
#1 transferring dockerfile: 156B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/cjson-build:latest
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/2] FROM docker.io/library/cjson-build:latest
#4 DONE 0.1s

#5 [2/2] WORKDIR /app/build
#5 DONE 0.1s

#6 exporting to image
#6 exporting layers 0.0s done
#6 writing image sha256:e9ee6e73bc442fcf2e33ec7e915fae4bf74993f54face679beeea46388783793 done
#6 naming to docker.io/library/cjson-test done
#6 DONE 0.0s
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Testy)
[Pipeline] dir
Running in /var/jenkins_home/workspace/p4/INO/GCL02/MP417574/Sprawozdanie2/JenkinsLogs
[Pipeline] {
[Pipeline] sh
+ mkdir -p artifacts
[Pipeline] sh
+ docker run --rm cjson-test
+ tee artifacts/test_result.log
Test project /app/build
      Start  1: cJSON_test
 1/19 Test  #1: cJSON_test .......................   Passed    0.00 sec
      Start  2: parse_examples
 2/19 Test  #2: parse_examples ...................   Passed    0.00 sec
      Start  3: parse_number
 3/19 Test  #3: parse_number .....................   Passed    0.00 sec
      Start  4: parse_hex4
 4/19 Test  #4: parse_hex4 .......................   Passed    0.01 sec
      Start  5: parse_string
 5/19 Test  #5: parse_string .....................   Passed    0.00 sec
      Start  6: parse_array
 6/19 Test  #6: parse_array ......................   Passed    0.00 sec
      Start  7: parse_object
 7/19 Test  #7: parse_object .....................   Passed    0.00 sec
      Start  8: parse_value
 8/19 Test  #8: parse_value ......................   Passed    0.00 sec
      Start  9: print_string
 9/19 Test  #9: print_string .....................   Passed    0.00 sec
      Start 10: print_number
10/19 Test #10: print_number .....................   Passed    0.00 sec
      Start 11: print_array
11/19 Test #11: print_array ......................   Passed    0.00 sec
      Start 12: print_object
12/19 Test #12: print_object .....................   Passed    0.00 sec
      Start 13: print_value
13/19 Test #13: print_value ......................   Passed    0.00 sec
      Start 14: misc_tests
14/19 Test #14: misc_tests .......................   Passed    0.00 sec
      Start 15: parse_with_opts
15/19 Test #15: parse_with_opts ..................   Passed    0.00 sec
      Start 16: compare_tests
16/19 Test #16: compare_tests ....................   Passed    0.00 sec
      Start 17: cjson_add
17/19 Test #17: cjson_add ........................   Passed    0.00 sec
      Start 18: readme_examples
18/19 Test #18: readme_examples ..................   Passed    0.00 sec
      Start 19: minify_tests
19/19 Test #19: minify_tests .....................   Passed    0.00 sec

100% tests passed, 0 tests failed out of 19

Total Test time (real) =   0.06 sec
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Wyniki logów z testów)
[Pipeline] archiveArtifacts
Archiving artifacts
Recording fingerprints
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
