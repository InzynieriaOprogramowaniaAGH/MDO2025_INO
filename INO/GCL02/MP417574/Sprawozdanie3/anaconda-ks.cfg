# Generated by Anaconda 41.35
# Generated by pykickstart v3.58
#version=DEVEL

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'

# System language
lang en_US.UTF-8

# Network information
network --bootproto=dhcp --device=enp0s3 --hostname=fedora.test --ipv6=auto --activate

# Repository Added
url --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-41&arch=x86_64
repo --name=update \
     --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f41&arch=x86_64

%packages
bash
%end

# Run the Setup Agent on first boot
firstboot --enable

# Generated using Blivet version 3.11.0
ignoredisk --only-use=sda

#Automatic partitioning
autopart

# Partition clearing information
clearpart --none --initlabel

# System timezone
timezone Europe/Warsaw --utc

# Root password
rootpw --iscrypted --allow-ssh   $y$j9T$f42zTKc8FiEAXyECki5fEwka$TuNUxPrCp2i9fdDQZY3W7TDOMG9aGTdtVCupZdfmsJ4

# Kickstart user
user --groups=wheel --name=kickstart \
     --password=$y$j9T$eKgdXsLTmrSEuSPjMoYgokYv$EzoYQqbicne4onhOqzWeVa420g3u.59tCdlzzVbTSb8 \
     --iscrypted --gecos="kickstart"

reboot


# W tej sekcji %post robimy już wszystko w docelowym systemie:
# 1) Dodajemy lokalne repo
# 2) Instalujemy cjson, gcc, glibc, curl
# 3) Przygotowujemy katalog /opt/example
# 4) Pobieramy main.c i tworzymy skrypt autostartu

%post --log=/tmp/postinstall.log --interpreter=/bin/bash
# 1) Dodaj lokalne repo
cat << 'EOF' > /etc/yum.repos.d/myrepo.repo
[myrepo]
name=Local CJSON Repo
baseurl=http://192.168.0.7/myrepo/
enabled=1
gpgcheck=0
EOF

# 2) Zainstaluj CJSON i narzędzia
dnf clean all
dnf -y install cjson gcc glibc curl

# 3) Przygotuj katalog na kod i wynik
mkdir -p /opt/example
chown kickstart:kickstart /opt/example

# 4) Pobierz źródło programu
curl -L -o /opt/example/main.c \
    https://raw.githubusercontent.com/InzynieriaOprogramowaniaAGH/MDO2025_INO/refs/heads/MP417574/INO/GCL02/MP417574/Sprawozdanie3/Dockerfiles_p/main.c

# 5) Stwórz skrypt autostartu
cat << 'EOS' > /etc/profile.d/run_example.sh
#!/bin/bash
if [ ! -f /opt/example/.compiled ]; then
    echo "Kompilacja programu..." >> /opt/example/autostart.log
    gcc /opt/example/main.c \
        -o /opt/example/example \
        -lcjson \
        -I/usr/include \
        -L/usr/lib64
    if [ -f /opt/example/example ]; then
        echo "Uruchomianie programu..." >> /opt/example/autostart.log
        LD_LIBRARY_PATH=/usr/lib64 /opt/example/example >> /opt/example/autostart.log 2>&1
    else
        echo "Kompilacja nie powiodła się :<" >> /opt/example/autostart.log
    fi
    touch /opt/example/.compiled
fi
EOS
chmod +x /etc/profile.d/run_example.sh
%end
