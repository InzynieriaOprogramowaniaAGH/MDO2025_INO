pipeline {
  agent any

  environment {
    IMAGE      = 'pytest-examples-build:0.1.0'
    DOCKERFILE = 'INO/GCL02/PK417538/pipeline/Dockerfile.build'
    CONTEXT    = 'INO/GCL02/PK417538/pipeline'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build & Test Docker image') {
      steps {
        sh "docker build -t ${IMAGE} -f ${DOCKERFILE} ${CONTEXT}"

        script {
          def cid = sh(script: "docker create ${IMAGE}", returnStdout: true).trim()
          sh "docker cp ${cid}:/app/test.log ${WORKSPACE}/test.log"
          sh "docker cp ${cid}:/app/dist ${WORKSPACE}/dist"
          sh "docker rm ${cid}"
        }
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: 'test.log', fingerprint: true
      archiveArtifacts artifacts: 'dist/*.whl'
    }
  }
}
