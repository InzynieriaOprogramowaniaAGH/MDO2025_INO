pipeline {
    agent any

    environment {
        WORKDIR = "INO/GCL02/JK414562/pipeline"
    }

    stages {

        stage('Clone xz') {
            steps {
                sh "rm -rf xz"
                sh "git clone https://github.com/tukaani-project/xz.git xz"
            }
        }

        stage('Build & Package') {
            steps {
                dir("${WORKDIR}") {
                    script {
                        // Build the release tarball
                        docker.build('xz-build', '-f Dockerfile.build .')

                        // Extract the single xz.tar.gz artifact
                        sh 'mkdir -p artifacts'
                        def c = sh(script: "docker create xz-build", returnStdout: true).trim()
                        sh "docker cp ${c}:/app/xz.tar.gz artifacts/xz.tar.gz"
                        sh "docker rm ${c}"
                    }
                }
            }
        }

        stage('Test') {
            steps {
                dir("${WORKDIR}") {
                    script {
                        // Build the tester image
                        docker.build('xz-test', '-f Dockerfile.test .')

                        // Run tests and collect logs
                        sh 'mkdir -p logs'
                        def c = sh(script: "docker create xz-test", returnStdout: true).trim()
                        sh "docker cp ${c}:/app/logs/xz_test.log logs/xz_test.log"
                        sh "docker rm ${c}"
                    }
                }
            }
        }

    }

    post {
        always {
            archiveArtifacts artifacts: "${WORKDIR}/artifacts/xz.tar.gz",   allowEmptyArchive: false
            archiveArtifacts artifacts: "${WORKDIR}/logs/xz_test.log",      allowEmptyArchive: false
        }
    }
}
