pipeline {
    agent any

    environment {
        WORKDIR = "pipeline"
    }

    stages {
        stage('Clone xz') {
            steps {
                dir("${WORKDIR}") {
                    sh 'rm -rf xz && git clone https://github.com/tukaani-project/xz.git'
                }
            }
        }
        stage('Build') {
            steps {
                dir("${WORKDIR}") {
                    script {
                        // Budujemy obraz buildowy
                        docker.build('xz-build', '-f Dockerfile.build .')
                        // Wyciągamy artefakt
                        sh 'mkdir -p artifacts'
                        def cid = sh(script: 'docker create xz-build', returnStdout: true).trim()
                        sh "docker cp ${cid}:/app/xz-*.tar.gz artifacts/"
                        sh "docker rm ${cid}"
                    }
                }
            }
        }
        stage('Test') {
            steps {
                dir("${WORKDIR}") {
                    script {
                        docker.build('xz-test', '-f Dockerfile.test .')
                        sh 'mkdir -p logs'
                        def cid = sh(script: 'docker create xz-test', returnStdout: true).trim()
                        sh "docker cp ${cid}:/app/xz/logs/test_results.log logs/"
                        sh "docker rm ${cid}"
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                dir("${WORKDIR}") {
                    script {
                        docker.build('xz-deploy', '-f Dockerfile.deploy .')
                        // nic więcej, bo deploy jest w Dockerfile.deploy
                    }
                }
            }
        }
        stage('Print') {
            steps {
                echo '✅ Pipeline finished successfully.'
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: "${WORKDIR}/artifacts/*.tar.gz", allowEmptyArchive: true
            archiveArtifacts artifacts: "${WORKDIR}/logs/*.log", allowEmptyArchive: true
        }
    }
}
