pipeline {
    agent any

    environment {
        WORKDIR   = "INO/GCL02/JK414562"
        ARTIFACTS = "${WORKDIR}/artifacts"
        LOGS      = "${WORKDIR}/logs"
    }

    stages {

        stage('Clone xz') {
            steps {
                sh "rm -rf xz"
                sh "git clone https://github.com/tukaani-project/xz.git xz"
            }
        }

        stage('Build') {
            steps {
                dir('xz') {
                    sh """
                      apt-get update && apt-get install -y \\
                        build-essential autotools-dev autoconf automake libtool gettext pkg-config \\
                        ca-certificates
                      ./autogen.sh
                      ./configure
                      make -j\$(nproc)
                    """
                }
            }
        }

        stage('Test') {
            steps {
                dir('xz') {
                    // przygotuj katalog na logi
                    sh "mkdir -p ../logs"
                    // uruchom testy autotools
                    sh """
                      make check > ../logs/xz_test.log 2>&1 || true
                    """
                }
            }
        }

        stage('Package') {
            steps {
                dir('xz') {
                    sh """
                      make dist
                      # zmień nazwę tarballa na stałą, żeby łatwo archiwizować
                      for f in xz-*.tar.gz; do mv \$f ../artifacts/xz.tar.gz; done
                    """
                }
            }
        }

        stage('Done') {
            steps {
                echo '✅ Wszystko zbudowane, przetestowane i zapakowane.'
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'artifacts/xz.tar.gz', allowEmptyArchive: false
            archiveArtifacts artifacts: 'logs/xz_test.log',   allowEmptyArchive: false
        }
    }
}
